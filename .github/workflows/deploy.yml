name: Build and Deploy to Server

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository to ensure we have the latest code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Verify Dockerfile exists
      - name: Verify Dockerfile exists
        working-directory: ./backend
        run: |
          ls -la
          if [ ! -f Dockerfile ]; then
            echo "Error: Dockerfile not found!"
            exit 1
          fi

      # Step 3: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Step 4: Build Docker image
      - name: Build Docker image
        working-directory: ./backend
        run: docker build -t gymapp-backend:latest .

      # Step 5: Save Docker image as tar
      - name: Save Docker image as tar
        working-directory: ./backend
        run: docker save -o gymapp-backend.tar gymapp-backend:latest

      # Step 6: List files after saving Docker tar
      - name: List files after saving Docker tar
        working-directory: ./backend
        run: ls -la

      # Step 7: Change permissions for tar file
      - name: Change permissions for tar file
        working-directory: ./backend
        run: chmod 644 gymapp-backend.tar

      # Step 8: Move tar file to /tmp directory for easier access
      - name: Move tar file to /tmp directory
        run: mv ./backend/gymapp-backend.tar /tmp/gymapp-backend.tar

      # Step 9: Transfer Docker tar file to server
      - name: Transfer Docker tar file to server
        uses: appleboy/scp-action@v0.1.6
        with:
          source: "/tmp/gymapp-backend.tar"
          target: "/home/${{ secrets.SERVER_USER }}/app/"
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}

      # Step 10: Deploy to Server
      - name: Deploy to Server
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USER }}
          password: ${{ secrets.SERVER_PASSWORD }}
          script: |
            docker load -i /home/${{ secrets.SERVER_USER }}/app/gymapp-backend.tar
            docker stop gymapp-backend || true
            docker rm gymapp-backend || true
            docker run -d --name gymapp-backend -p 8000:8000 --env-file /home/${{ secrets.SERVER_USER }}/app/.env gymapp-backend:latest
